Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# To make plotting the bins linearly work, we deal with the base2 logs of the power-of-2 data quality values

# The values are all powers of two from 2**1 to 2**14, except for 0, which is 2**-inf
bins_titles = (np.logspace(-1, 14, 16, base=2, dtype=int))
meanings = ['No Anomalies', 'Reed-Solomon Error', 'Hot Spot', 'Detector Shadow', 'Poorly Calibrated Region',  # What each power of 2 means in order
            # More info in the data handbook
            'Very-low Response Region', 'Background Feature', 'Burst', 'Pixel Out-of-bounds', 'Fill Data',
            'Pulse Height Out-of-bounds', 'Low Response Region', 'Bad Time Interval', 'Low PHA Feature',
            'Gain-sag Hole', 'Not Used']

# pair the meaning with its power of 2 value in a single string
meanings2 = [str(bt)+": " + mn for bt, mn in zip(bins_titles, meanings)]

# Top (FUV) subplot and bottom (NUV) subplot
fig, (ax0, ax1) = plt.subplots(2, 1, figsize=(10, 12))

# Suppress a divide by zero warning
np.warnings.filterwarnings('ignore', category=RuntimeWarning)
for i in range(2):  # First loop through the 2 FUV segments to make the top plot
    # Gather the data
    dataQual, segment = fuv_x1d_data[i]["DQ"], fuv_x1d_data[i]["SEGMENT"]
    bins_ = np.arange(-1, 15)  # all the log2 of the DQ values
    bins_titles = (np.logspace(-1, 14, 16, base=2, dtype=int))
    logDQ = np.log2(dataQual)
    logDQ = np.nan_to_num(logDQ, neginf=-1)

    ax0.set_xticks([])
    # Add hatching to distinguish overlapping colors
    ax0.hist(logDQ, bins=bins_, color='cmy'[
             i], alpha=0.5 + 0.1*(i+1), label=segment, hatch='|-'[i])
    ax0.legend(fontsize=20)
    ax0.set_yscale('log')
    ax0.set_title("Fig. 3.1\nData quality flag frequencies", fontsize=20)

for i in range(3):  # Next loop through the 3 NUV segments/stripes to make bottom plot
    # Gather the data
    dataQual, segment = nuv_x1d_data[i]["DQ"], nuv_x1d_data[i]["SEGMENT"]
    bins_ = np.arange(-1, 15)  # all the log2 of the DQ values

    logDQ = np.log2(dataQual)
    logDQ[np.where(-1*(logDQ) == np.inf)] = -1

    # Add hatching to distinguish overlapping colors
    ax1.hist(logDQ, bins=bins_, color='cmy'[
             i], alpha=1 - 0.25*(i), label=segment, hatch='|-/'[i])
    ax1.legend(fontsize=20)
    ax1.set_yscale('log')
# suppress a divide by zero warning
np.warnings.filterwarnings('default', category=RuntimeWarning)
plt.xticks(bins_+0.5, labels=meanings2, rotation='vertical', fontsize=15)
fig.set_tight_layout('tight')
plt.savefig(str(plotsdir / 'Fig3.1.png'), dpi=200)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[21], line 18[0m
[1;32m     15[0m fig, (ax0, ax1) [38;5;241m=[39m plt[38;5;241m.[39msubplots([38;5;241m2[39m, [38;5;241m1[39m, figsize[38;5;241m=[39m([38;5;241m10[39m, [38;5;241m12[39m))
[1;32m     17[0m [38;5;66;03m# Suppress a divide by zero warning[39;00m
[0;32m---> 18[0m [43mnp[49m[38;5;241;43m.[39;49m[43mwarnings[49m[38;5;241m.[39mfilterwarnings([38;5;124m'[39m[38;5;124mignore[39m[38;5;124m'[39m, category[38;5;241m=[39m[38;5;167;01mRuntimeWarning[39;00m)
[1;32m     19[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;241m2[39m):  [38;5;66;03m# First loop through the 2 FUV segments to make the top plot[39;00m
[1;32m     20[0m     [38;5;66;03m# Gather the data[39;00m
[1;32m     21[0m     dataQual, segment [38;5;241m=[39m fuv_x1d_data[i][[38;5;124m"[39m[38;5;124mDQ[39m[38;5;124m"[39m], fuv_x1d_data[i][[38;5;124m"[39m[38;5;124mSEGMENT[39m[38;5;124m"[39m]

File [0;32m/usr/share/miniconda/lib/python3.10/site-packages/numpy/__init__.py:320[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    317[0m     [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mtesting[39;00m [38;5;28;01mimport[39;00m Tester
[1;32m    318[0m     [38;5;28;01mreturn[39;00m Tester
[0;32m--> 320[0m [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m([38;5;124m"[39m[38;5;124mmodule [39m[38;5;132;01m{!r}[39;00m[38;5;124m has no attribute [39m[38;5;124m"[39m
[1;32m    321[0m                      [38;5;124m"[39m[38;5;132;01m{!r}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;18m__name__[39m, attr))

[0;31mAttributeError[0m: module 'numpy' has no attribute 'warnings'
AttributeError: module 'numpy' has no attribute 'warnings'

